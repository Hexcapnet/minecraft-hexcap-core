plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'net.hexcap.minecraft'
version = '1.0'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = "hexcap-repo"
            allowInsecureProtocol = true
            credentials {
                username = rootProject.properties['user']
                password = rootProject.properties['pass']
            }
            if(version.endsWith('SNAPSHOT')) {
                url = uri("http://repo.hexcap.net/repository/maven-snapshots/")
            } else {
                url = uri("http://repo.hexcap.net/repository/maven-releases/")
            }
        }
    }
}

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
    implementation 'org.slf4j:slf4j-simple:2.0.7'
    implementation 'io.javalin:javalin:5.4.2'
    compileOnly 'org.projectlombok:lombok:1.18.20'
    compileOnly 'com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
}

def targetJavaVersion = 11
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar{
    def name = rootProject.name.split('-').collect { it.capitalize() }.join('')
    def version = rootProject.version
    archiveFileName = "${name}-${version}.jar"
    manifest {
        attributes 'Module-Issuer': 'hexcap.net'
    }
    doFirst {
        def versionFile = "${buildDir}/resources/main/config.yml"
        file(versionFile).text = file(versionFile).text.replace('{ project-version }', version)
    }
}